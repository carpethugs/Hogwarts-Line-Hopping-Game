{"version":3,"sources":["images/user.png","images/train-cartoon.png","images/tilted-tracks.png","components/Track.js","components/clock.js","components/algorithmStructure.js","components/AlgorithmHandler.js","components/Main.js","components/UserForm.js","components/StartMenu.js","index.js","App.js"],"names":["module","exports","Track","props","state","trackNum","maxTracks","algoStatus","incomingTrain","nextProps","this","setState","prevState","numOfTracks","hoboArr","personLen","toString","tracks","i","hobosOnTrack","forEach","element","push","Figure","className","Image","src","require","alt","width","Caption","console","log","id","fluid","renderMultTracks","Component","Clock","time","Date","nextTrain","timeLimit","timer","gameover","tick","bind","timerID","setInterval","clearInterval","toLocaleTimeString","sendTrain","componentWillUnmount","endGame","out","Algo","startTrack","maxTrack","eventCallback","track","planeInfoLog","curTrack","scoreFromTime","trainsHit","trainPassed","lastMove","now","eventFunc","name","info","downTrack","upTrack","shift","movedTracks","BasicAlgo","callBackFun","jump","SmartAlgo","BigJumpAlgo","lastPlane","nexTrack","Math","floor","random","AlgorithmHandler","algorithms","nextTimeJump","numTracks","nextTrainTime","trainTime","collision","mainCallback","callback","sendPlaneInfoToAlgo","componentWillReceiveProps","algoMakesAMove","algs","basicalg","smartalg","bigJumpAlgo","trackNumOn","getCurTrack","receiveHit","randomNum","receivePlane","generateBadInfo","range","currentTime","getTime","hoboPos","map","player","index","getScore","Main","user","score","round","health","trainsToCome","nextTrainTrack","trainsPassed","gameLength","algoCallbackFun","trainList","incoming","passedTrains","elem","document","getElementById","innerHTML","ReactDOM","render","list","UserForm","Form","onSubmit","value","trains","delay","play","Group","controlId","Label","Control","type","defaultValue","min","max","required","pattern","StartMenu","onClick"],"mappings":"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","file":"static/js/main.8a166f3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.5ea17709.png\";","module.exports = __webpack_public_path__ + \"static/media/train-cartoon.aa7e7327.png\";","module.exports = __webpack_public_path__ + \"static/media/tilted-tracks.e3ce708f.png\";","import React, { Component, OverlayTrigger, Tooltip, Button } from \"react\";\r\nimport Image from \"react-bootstrap/Image\";\r\n//import { Figure } from \"react-bootstrap\";\r\n// import Timer from './Timer'\r\nimport Figure from \"react-bootstrap/Figure\";\r\nimport FigureImage from \"react-bootstrap/FigureImage\";\r\nimport FigureCaption from \"react-bootstrap/FigureCaption\";\r\nimport \"./../style/Track.css\";\r\n\r\nexport default class Track extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      trackNum: props.maxTracks,\r\n      algoStatus: props.algoStatus,\r\n      incomingTrain: props.incomingTrain,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState((prevState) => ({\r\n      algoStatus: nextProps.algoStatus,\r\n      incomingTrain: nextProps.incomingTrain,\r\n    }));\r\n  }\r\n\r\n  renderMultTracks(numOfTracks, hoboArr) {\r\n    let personLen = (150 + 200 / numOfTracks).toString(10);\r\n    // let trackLen = (70 / numOfTracks).toString(10);\r\n    let tracks = [];\r\n    for (let i = 0; i < numOfTracks; i++) {\r\n      let hobosOnTrack = [];\r\n      hoboArr.forEach((element) => {\r\n        if (element[0] == i) {\r\n          hobosOnTrack.push(\r\n            <Figure className=\"user mr-5\">\r\n              <Figure.Image\r\n                src={require(\"./../images/user.png\")}\r\n                className=\"bobbing\"\r\n                alt=\"this is alt\"\r\n                width={personLen}\r\n                // fluid\r\n              />\r\n              <Figure.Caption className=\"text-white text-center\">\r\n                {element[1]}\r\n              </Figure.Caption>\r\n            </Figure>\r\n          );\r\n        }\r\n      });\r\n\r\n      tracks.push(\r\n        <div className=\"my-3\">\r\n          <div className=\"d-flex flex-row\">\r\n            {hobosOnTrack}\r\n            {console.log(\"Train on track\", this.state.incomingTrain)}\r\n            {this.state.incomingTrain === i ? (\r\n              <Image\r\n                src={require(\"./../images/train-cartoon.png\")}\r\n                className=\"train\"\r\n                id=\"train\"\r\n                alt=\"train\"\r\n              />\r\n            ) : (\r\n              <div className=\"train\"></div>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <Image\r\n              src={require(\"./../images/tilted-tracks.png\")}\r\n              className=\"track\"\r\n              fluid\r\n              // height={trackLen}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return tracks;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderMultTracks(this.state.trackNum, this.state.algoStatus)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Clock extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            time: new Date(),\r\n            nextTrain: this.props.nextTrain,\r\n            timeLimit:this.props.timeLimit,\r\n            timer:0,\r\n            gameover:false,\r\n        }\r\n        this.tick = this.tick.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ nextTrain: nextProps.nextTrain });  \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n        if (this.state.time.toLocaleTimeString() == this.state.nextTrain.toLocaleTimeString()) {\r\n            // console.log(\"train incoming\")\r\n            this.props.sendTrain()\r\n        }\r\n        this.setState({\r\n            time: new Date(),\r\n            timer:this.state.timer+1\r\n        });\r\n        if(this.state.timer === this.state.timeLimit){\r\n            console.log(\"Time over\")\r\n            this.componentWillUnmount()\r\n            this.props.endGame()\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let out\r\n        !this.state.gameover ? out=this.state.time.toLocaleTimeString() : out=\"GAME OVER\"\r\n        return (\r\n            <div>\r\n                {out}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export class Algo {\r\n  constructor(startTrack, maxTrack, eventCallback) {\r\n    this.track = startTrack;\r\n    this.maxTrack = maxTrack;\r\n    this.planeInfoLog = []; //an array of all the planes you recieved\r\n    this.curTrack = this.track;\r\n    this.scoreFromTime = 0;\r\n    this.trainsHit = 0;\r\n    this.trainPassed = 0;\r\n    this.lastMove = Date.now();\r\n    this.eventFunc = eventCallback;\r\n    this.name = \"algo\";\r\n  }\r\n  receiveHit(info) {\r\n    this.trainsHit++;\r\n  }\r\n\r\n  //info should be in array [track number, time]\r\n\r\n  getCurTrack() {\r\n    return this.curTrack;\r\n  }\r\n\r\n  //info is track you teleported to\r\n  receiveMove(info) {}\r\n\r\n  movedTracks() {\r\n    this.eventFunc();\r\n    //update score\r\n    this.scoreFromTime += Date.now() - this.lastMove; //millis seconds\r\n    this.lastMove = Date.now();\r\n  }\r\n\r\n  getScore() {\r\n    return this.trainPassed * 100 - this.trainsHit * 300;\r\n  }\r\n\r\n  upTrack() {\r\n    if (this.curTrack !== this.maxTrack - 1) {\r\n      this.curTrack++;\r\n    } else {\r\n      this.downTrack();\r\n    }\r\n  }\r\n\r\n  downTrack() {\r\n    if (this.curTrack !== 0) {\r\n      this.curTrack--;\r\n    } else {\r\n      this.upTrack();\r\n    }\r\n  }\r\n\r\n  jump() {\r\n    let info = this.planeInfoLog.shift();\r\n    if (info === null) return;\r\n    // console.log(\"NEXTTRAIN    \"+info[0])\r\n    if (info[0] === this.curTrack) {\r\n      if (this.curTrack >= 0 && this.curTrack < this.maxTrack) {\r\n        this.upTrack();\r\n      } else {\r\n        this.downTrack();\r\n      }\r\n    }\r\n    this.movedTracks();\r\n  }\r\n}\r\n\r\nexport class BasicAlgo extends Algo {\r\n  constructor(startTrack, maxTrack, callBackFun) {\r\n    super(startTrack, maxTrack, callBackFun);\r\n    this.name = \"BasicAglo\";\r\n  }\r\n  receivePlane(info) {\r\n    this.trainPassed++;\r\n    this.planeInfoLog.push(info);\r\n  }\r\n  receiveHit(info) {\r\n    super.receiveHit(info);\r\n    this.jump();\r\n  }\r\n  //info is track you teleported to\r\n}\r\n\r\nexport class SmartAlgo extends Algo {\r\n  constructor(startTrack, maxTrack, callBackFun) {\r\n    super(startTrack, maxTrack, callBackFun);\r\n    this.name = \"SmartAlgo\";\r\n  }\r\n  receivePlane(info) {\r\n    this.trainPassed++;\r\n    this.planeInfoLog.push(info);\r\n    this.jump();\r\n  }\r\n  receiveHit(info) {\r\n    super.receiveHit(info);\r\n    this.movedTracks();\r\n  }\r\n  //info is track you teleported to\r\n}\r\n\r\n//tester code\r\nexport class TestAlgo {\r\n  constructor(startTrack, maxTrack) {\r\n    this.track = startTrack;\r\n    this.maxTrack = maxTrack;\r\n    this.planeInfoLog = []; //an array of all the planes you recieved\r\n    this.curTrack = this.track;\r\n  }\r\n  receiveHit(info) {\r\n    console.log(\"CC- hit \" + info);\r\n  }\r\n\r\n  //info should be in array [track number, time]\r\n  receivePlane(info) {\r\n    this.planeInfoLog.push(info);\r\n    console.log(\"CC- plane \" + info);\r\n  }\r\n\r\n  //info is track you teleported to\r\n  receiveMove(info) {\r\n    console.log(\"CC- move\");\r\n  }\r\n}\r\n\r\nexport class BigJumpAlgo extends Algo {\r\n  constructor(startTrack, maxTrack, callBackFun) {\r\n    super(startTrack, maxTrack, callBackFun);\r\n    this.track = startTrack;\r\n    this.maxTrack = maxTrack;\r\n    this.lastPlane = [];\r\n    this.curTrack = this.track;\r\n    this.name = \"BigJumpAlgo\";\r\n  }\r\n  receiveHit(info) {\r\n    super.receiveHit(info);\r\n  }\r\n\r\n  receivePlane(info) {\r\n    this.trainPassed++;\r\n    this.lastPlane = info;\r\n    var nexTrack = Math.floor(Math.random() * this.maxTrack);\r\n    if (this.lastPlane[0] == nexTrack) {\r\n      nexTrack = Math.floor(Math.random() * this.maxTrack);\r\n    }\r\n    this.curTrack = nexTrack;\r\n    this.movedTracks();\r\n  }\r\n  receiveMove(info) {}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BasicAlgo, SmartAlgo, BigJumpAlgo } from \"./algorithmStructure\";\r\n\r\nexport default class AlgorithmHandler extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      algorithms: [],\r\n      nextTimeJump: null,\r\n      tracks: this.props.numTracks,\r\n      nextTrain: this.props.nextTrain,\r\n      nextTrainTime: this.props.trainTime,\r\n      collision: this.props.collision,\r\n      curTrack: this.props.curTrack,\r\n      mainCallback: this.props.callback,\r\n    };\r\n    //this.whereIsNextTrain = this.whereIsNextTrain.bind(this);\r\n    this.sendPlaneInfoToAlgo = this.sendPlaneInfoToAlgo.bind(this);\r\n    this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this);\r\n    this.algoMakesAMove = this.algoMakesAMove.bind(this);\r\n    let algs = this.state.algorithms;\r\n    var basicalg = new BasicAlgo(\r\n      this.props.curTrack,\r\n      this.props.numTracks,\r\n      this.algoMakesAMove\r\n    );\r\n    algs.push(basicalg);\r\n    var smartalg = new SmartAlgo(\r\n      this.props.curTrack,\r\n      this.props.numTracks,\r\n      this.algoMakesAMove\r\n    );\r\n    algs.push(smartalg);\r\n    var bigJumpAlgo = new BigJumpAlgo(\r\n      this.props.curTrack,\r\n      this.props.numTracks,\r\n      this.algoMakesAMove\r\n    );\r\n    algs.push(bigJumpAlgo);\r\n    this.setState({ algorithms: algs });\r\n    //add in the algorithms\r\n    // this.state.algorithms.push(new TestAlgo(1, 4));\r\n    this.algoMakesAMove(); //call to update the player at the start\r\n  } //end of constructor\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // console.log(\"next Props:\");\r\n    // console.log(nextProps);\r\n    if (nextProps.trainTime == this.state.nextTrainTime) {\r\n      return; //This is because the train prop was not changed therefore no updating is needed\r\n    }\r\n    this.sendPlaneInfoToAlgo([nextProps.nextTrain, nextProps.trainTime]);\r\n\r\n    //check impacts\r\n    this.state.algorithms.forEach((element) => {\r\n      var trackNumOn = element.getCurTrack();\r\n      // console.log(\"Check hit >>\" + trackNumOn + \" = \" + this.state.nextTrain);\r\n      // console.log(typeof this.state.nextTrain);\r\n      if (trackNumOn == this.state.nextTrain) {\r\n        element.receiveHit(trackNumOn);\r\n      }\r\n    });\r\n    //send planes\r\n    //update\r\n    this.setState({\r\n      nextTrain: nextProps.nextTrain,\r\n      nextTrainTime: nextProps.trainTime,\r\n    });\r\n  }\r\n\r\n  //info should be in array [track number, time]\r\n  sendPlaneInfoToAlgo(info) {\r\n    //the zero index of the array is the algo references\r\n    this.state.algorithms.forEach((element) => {\r\n      if (this.randomNum(10) < 9) {\r\n        element.receivePlane(info);\r\n      } else {\r\n        element.receivePlane(this.generateBadInfo(info));\r\n      }\r\n    });\r\n    //console.log(\"CC - Sent planes to algos VVV\");\r\n    //console.log(info);\r\n  }\r\n\r\n  randomNum(range) {\r\n    return Math.floor(Math.random() * range);\r\n  }\r\n\r\n  generateBadInfo(info) {\r\n    let currentTime = new Date();\r\n    var falseTrack = this.randomNum(info[0]) + 1;\r\n    var falseTime = new Date(this.randomNum(20000) + currentTime.getTime());\r\n    return [falseTrack, falseTime];\r\n  }\r\n\r\n  algoMakesAMove() {\r\n    let hoboPos = [];\r\n    this.state.algorithms.forEach((element) => {\r\n      hoboPos.push([element.curTrack, element.name]);\r\n    });\r\n    this.state.mainCallback(hoboPos);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul className=\"list-group-flush rounded-lg p-2 bg-white text-dark\">\r\n          <h3>Scoreboard</h3>\r\n          {this.state.algorithms.map((player, index) => {\r\n            return (\r\n              <li className=\"list-group-item font-weight-bold\">\r\n                {player.name} score: {player.getScore()}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport Track from \"./Track\";\r\nimport Clock from \"./clock\";\r\nimport AlgorithmHandler from \"./AlgorithmHandler\";\r\n\r\nexport default class Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: this.props.name,\r\n      tracks: this.props.tracks,\r\n      score: 0,\r\n      curTrack: Math.round(this.props.tracks / 2),\r\n      health: 100,\r\n      trainsToCome: this.props.trainsToCome,\r\n      nextTrain: this.props.nextTrain,\r\n      nextTrainTrack: this.props.nextTrainTrack,\r\n      trainsPassed: [],\r\n      collision: false,\r\n      gameLength: this.props.gameLength * 60,\r\n      algoStatus: [],\r\n    };\r\n\r\n    // this.updateScore = this.updateScore.bind(this);\r\n    // this.updateHealth = this.updateHealth.bind(this);\r\n    this.sendTrain = this.sendTrain.bind(this);\r\n    this.algoCallbackFun = this.algoCallbackFun.bind(this);\r\n  }\r\n\r\n  // train departure\r\n  sendTrain() {\r\n    //grab current trains list\r\n    let trainList = this.state.trainsToCome;\r\n    //pop incoming train out\r\n    let incoming = trainList.shift();\r\n    //destructure to grab necessary info\r\n    var { track, time } = incoming;\r\n    //push new train onto list\r\n    trainList.push({\r\n      track: Math.floor(Math.random() * (this.state.tracks - 1) + 1),\r\n      time: new Date(new Date().getTime() + 25000),\r\n    });\r\n    //next train to come\r\n    let nextTrain = trainList[0];\r\n    //destructure to grab time\r\n    var { track, time } = nextTrain;\r\n    //grab passed trains list\r\n    let passedTrains = this.state.trainsPassed;\r\n    //append incoming train\r\n    passedTrains.push(incoming);\r\n    //update state\r\n    this.setState((prevState) => ({\r\n      trainsToCome: trainList,\r\n      nextTrainTrack: track,\r\n      nextTrain: time,\r\n      trainsPassed: passedTrains,\r\n    }));\r\n    // setTimeout(() => {}, 1000)\r\n  }\r\n\r\n  endGame() {\r\n    let elem = document.getElementById('game-area')\r\n    elem.innerHTML = \"\"\r\n    ReactDOM.render(\r\n    <div className=\"d-flex vh-100 justify-content-center align-items-center\">\r\n      <h1 className='display-1'>\r\n        Game Over\r\n      </h1>\r\n    </div>,\r\n    elem)\r\n  }\r\n\r\n  algoCallbackFun(list) {\r\n    this.setState((prevState) => ({\r\n      algoStatus: list,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"Main bg-dark text-light vh-100 p-0 m-0 container-fluid d-flex flex-column flex-nowrap justify-content-between\"\r\n        id=\"game-area\"\r\n      >\r\n        {/* Game Info*/}\r\n        <div className=\"p-3 m-0 d-flex flex-row justify-content-around\">\r\n          {/* Current Time */}\r\n          <div className=\"text-center\">\r\n            <h3 className=\"font-weight-light\">Current Time:</h3>\r\n            <h3 className=\"text-monospace\">\r\n              <Clock\r\n                nextTrain={this.state.nextTrain}\r\n                sendTrain={this.sendTrain}\r\n                timeLimit={this.state.gameLength}\r\n                endGame={this.endGame}\r\n              />\r\n            </h3>\r\n          </div>\r\n          {/* Next Time of Train */}\r\n          <div className=\"text-center\">\r\n            <h3 className=\"font-weight-light\">Next train at:</h3>\r\n            <h3 className=\"text-monospace\">\r\n              {this.state.nextTrain.toLocaleTimeString()}\r\n            </h3>\r\n          </div>\r\n          {/* Scoreboard */}\r\n          <div>\r\n            <AlgorithmHandler\r\n              collision={this.state.collision}\r\n              curTrack={this.state.curTrack}\r\n              tracks={this.state.tracks}\r\n              nextTrain={this.state.nextTrainTrack}\r\n              trainTime={this.state.nextTrain.toLocaleTimeString()}\r\n              numTracks={this.props.tracks}\r\n              callback={this.algoCallbackFun}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Game Area */}\r\n        <div className=\"p-0 m-0\">\r\n          <Track\r\n            maxTracks={this.state.tracks}\r\n            algoStatus={this.state.algoStatus}\r\n            incomingTrain={this.state.nextTrainTrack}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport Main from \"./Main\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nfunction play() {\r\n  const tracks = document.getElementById(\"numTracks\").value;\r\n  const name = document.getElementById(\"name\").value;\r\n  const gameLength = document.getElementById(\"length\").value;\r\n  var trains = [];\r\n\r\n  for (let i = 1; i < 6; i++) {\r\n    let track = Math.floor(Math.random() * 4);\r\n    let delay = i * 5000;\r\n    trains.push({\r\n      track: track,\r\n      time: new Date(new Date().getTime() + delay),\r\n    });\r\n  }\r\n\r\n  const { track, time } = trains[0];\r\n\r\n  ReactDOM.render(\r\n    <Main\r\n      tracks={tracks}\r\n      name={name}\r\n      trainsToCome={trains}\r\n      nextTrain={time}\r\n      nextTrainTrack={track}\r\n      gameLength={gameLength}\r\n    />,\r\n    document.getElementById(\"root\")\r\n  );\r\n}\r\n\r\nexport default function UserForm() {\r\n  return (\r\n    <FadeIn>\r\n      <Form\r\n        className=\"text-left bg-light p-3 m-3 rounded-lg\"\r\n        onSubmit={() => play()}\r\n      >\r\n        <Form.Group controlId=\"numTracks\">\r\n          <Form.Label>\r\n            <h5>Number of Tracks on Railway</h5>\r\n          </Form.Label>\r\n          <Form.Control type=\"number\" defaultValue=\"5\" min=\"2\" max=\"5\" required/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>\r\n            <h5>Name</h5>\r\n          </Form.Label>\r\n          <Form.Control type=\"text\" defaultValue=\"Guest\" pattern=\"[A-Za-z]+\" required/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"length\">\r\n          <Form.Label>\r\n            <h5>Game Length (Min.)</h5>\r\n          </Form.Label>\r\n          <Form.Control type=\"number\" defaultValue=\"2\" min=\"2\" max=\"5\" required />\r\n        </Form.Group>\r\n        <button\r\n          className=\"btn btn-lg rounded-lg btn-warning btn-block\"\r\n        >\r\n          Begin!\r\n        </button>\r\n      </Form>\r\n    </FadeIn>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Fadein from \"react-fade-in\";\r\nimport UserForm from \"./UserForm\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport \"./../style/StartMenu.css\";\r\n// import Main from 'Main'\r\n\r\nfunction handleClick(buttonName) {\r\n  if (buttonName === \"start\") {\r\n    // // ReactDOM.render(<Main />, document.getElementById('root'))\r\n    ReactDOM.render(<UserForm />, document.getElementById(\"choice-box\"));\r\n  }\r\n  // else if (buttonName === 'rules') {\r\n  //     // ReactDOM.render(<Rules />, document.getElementById('root'))\r\n  // } else {\r\n  //     // ReactDOM.render(<Devs />, document.getElementById('root'))\r\n  // }\r\n}\r\n\r\nexport default function StartMenu() {\r\n  return (\r\n    <div className=\"StartMenu bg-dark d-flex flex-column align-items-center justify-content-center text-center\">\r\n      <Fadein delay=\"0\">\r\n        <div className=\"position-relative p-0 mx-0 my-5\">\r\n          <Image src={require(\"./../images/user.png\")} className=\"bobbing\" />\r\n        </div>\r\n        <h1 className=\"text-light font-italic font-weight-light\">\r\n          Hogwarts Line Hopping Game\r\n        </h1>\r\n        <div className=\"container-sm my-3 px-5 py-2\">\r\n          <Fadein delay=\"400\">\r\n            <button\r\n              className=\"btn btn-lg btn-light btn-block text-dark font-weight-bold px-5 py-4 my-3\"\r\n              onClick={() => handleClick(\"start\")}\r\n            >\r\n              Start\r\n            </button>\r\n            {/* <button\r\n              className=\"btn btn-lg btn-light btn-block text-dark font-weight-bold px-5 py-2 my-1\"\r\n              onClick={() => handleClick(\"rules\")}\r\n            >\r\n              Rules\r\n            </button>\r\n            <button\r\n              className=\"btn btn-lg btn-light btn-block text-dark font-weight-bold px-5 py-2 my-1\"\r\n              onClick={() => handleClick(\"devs\")}\r\n            >\r\n              Devs\r\n            </button> */}\r\n          </Fadein>\r\n        </div>\r\n        <footer>\r\n          <p className=\"font-italic text-light font-weight-light\">\r\n            Created by: Alex Khrulev, Anthony Greco, Calvin Mozola, Daniel Mezhibovski,\r\n            and McKenzie Day\r\n          </p>\r\n        </footer>\r\n      </Fadein>\r\n      <div id=\"choice-box\" className=\"container-sm\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport App from './App';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// import Main from \"./components/Main\";\r\n// var trains = [];\r\n\r\n// for (let i = 1; i < 6; i++) {\r\n//   let track = Math.floor(Math.random() * 4);\r\n//   let delay = i * 7500;\r\n//   trains.push({\r\n//     track: track,\r\n//     time: new Date(new Date().getTime() + delay),\r\n//   });\r\n// }\r\n\r\n// const { track, time } = trains[0];\r\n// // console.log(trains)\r\n\r\n// ReactDOM.render(\r\n//   <Main\r\n//     tracks={5}\r\n//     name={\"Guest\"}\r\n//     trainsToCome={trains}\r\n//     nextTrain={time}\r\n//     nextTrainTrack={track}\r\n//   />,\r\n//   document.getElementById(\"root\")\r\n// );\r\n","import React from 'react'\r\nimport './style/App.css';\r\nimport StartMenu from './components/StartMenu'\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className='App bg-dark'>\r\n      <StartMenu />\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"sourceRoot":""}